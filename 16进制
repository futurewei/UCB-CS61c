16进制

normal digits+ 6 more字母

4个二进制digits represent 16 decimal values.
== 1一个16进制digit=4个binary digit   2^4=16


1---16  十进制： 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16
16进制 0 1 2 3 4 5 6 7 8 9 A B C D E F
二进制： 0000 0001 0010 0011 0100 0101 0111 1000 1001 1010 1011 1100 1101 1110 1111


以前用4个bits来表示一个十进制数字。 如0010, 0100.
要表示2479需要4个十进制数字，也就是4对groups of 4 bits.

A variable can’t just be a pointer in general; it has to be a pointer to some particular data type
pointer=memory address of something

void pointer:
void *p;


* 的意思是dereference,==ask what value is store at this memory location。 
int *p; int y;
y=*p;  ask what value stored in pointer p, and assign it to y.

------illegal----:
int x, y;
y=*x;  因为x不是一个memory address,无法ask vale stored in it. x的value就是一个数字，不是一个address.

---------legal-----:
y=*((int *) x);  pretend that x does contain a pointer to an integer, dereference that pointer and set y to the value found at that location in memory.
最可能的情况是发生runtime error, 因为x不是一个legal memory address。



“extern”  means very like global.  Global: variable defined outside of any procedure. 
extern: this thing is defined somewhere else.



在c语言里， a procedure must be declared before it can be called. 编译器需要知道number,和argument类型 这个procedure expects.
declaration:告诉电脑the type of thing being declared,但是并没有分配内存。

definition:告诉type，并且分配内存。


例子： int foo(int x, char *p);

definition:  int foo(int x, char *p)
{
	return x+strlen(p);
}

变量也一样，必须declared prior to every use。 并且必须被defined somewhere。
int x;     considered as definition.
int x =10;  definition,  allocate memory for x
extern int x; declaretion not a definition,
extern int x = 10; //ERROR！！！tries to have it both ways



static keyword: 2 meanings depending on whether its used inside or outside a procedure.
scope and extent.   scope means the place where the variable is available for use.
C uses a degenrate form of lexical scope.


extent of a variable means how long it exists.


main.
When a C program starts up, what runs first is a little piece of machine language code that’s the same for every program, whose job is to set up some machine registers; it then calls your procedure named main.
程序运行时，先运行一小段机器语言代码来建立起machine registers,然后开始运行叫main的方法。
main运行成功的话，返回0，运行失败的话返回一个non-zero.

int main(int arc, char **argv);  int arc表示number of arguments used. char **argv表示
an array of pointers to strings.[一个指向string的指针数组] char **argv means a pointer to a pointer
to a character.

character=1 byte=8 bits
integer pointer=1 word=4 bytes=32 bits float
double =2 words = 8 bytes =64 bits
在c语言里没有boolean， 0代表false，非0代表True，所以用1个bit就可以表示boolean.
***地址是一个unsigned integer. highest possible address on a 32 bit computer is 2^32 -1. 
512 MB(2^30 bytes) 是一个typical size of personal computer memory.(一般电脑内存为512MB)



Array: all of the same type, next to each other 在内存里！！！
1000: a[0]  1004: a[1]  每一个elements 用4bits=1bytes of memory.
int *p=&a[0];  一个指向数组第一个元素的pointer. &符号returns 内存地址at which the variable is stored.
所以pointer p stores 数组第一个元素的地址，并且地址内的内容是integer.
p+1代表compute the value of a pointer to the next element.









byte和bit  一个byte=8个bit。    Byte可以存储一个字符 2个Byte可以表示汉字。 bit是存储最小单位，
指的是0或1


Integer and floating point operations can lead too big/small to store within their
representations: overflow, underflow.


signed and unsigned integers:  (不带符号数) unsigned integer in 32 bit word represents 0 to 2^32-1
32 bit word can represent 2^32 binary numbers.
 an unsigned byte can represent values from 0 to 255, while signed byte can represent -128 to 127.
in Binary, the 2's Complement of a number is the negative equivalent of the positive number.
+2 = 0000 0010 and the 2's Complement is 1111 1110 which represents - 2.


正数=0******** 负数=1********
正数转换负数： 所有digit取反，0变1. 末尾再加1。
负数转换正数: 所有digit取反， 1变0， 末尾-1.
最左边是0代表是正数，最左边是1代表是负数。

经典考题 suppose we had a 5 bit word, what integers can be represented in two’s
complement?
2^5=32  -16 0 15
